.TH job-vm-launch 1 "$Date$" "$Revision$" "PBS TOOLS"

.SH NAME
job-vm-launch \- Launch a KVM-based virtual machine inside a PBS job.

.SH SYNOPSIS
.B job-vm-launch
[arguments] <vm-image-file> [arguments]

.SH DESCRIPTION
.B job-vm-launch
launches a virtual machine instance within a TORQUE job using KVM.
The virtual machine will be constrained by the resource limits of the
job and will be killed off when the job ends.  This program allows
unprivileged users to launch one or more virtual machines (VMs) within
the context and confines of a TORQUE batch job.

.P

.B job-vm-launch
works by leveraging the fact that a VM launched through KVM is managed
by the Linux kernel as a process running
.B qemu-kvm.
This process can be treated as just another process as far as TORQUE's
process accounting and tasks management are concerned.
.B job-vm-launch
handles launching the VM through KVM as well as placing the resulting
process into the job's cpuset or control group if available.  This
allows VMs to be treated as just another kind of job in the batch
environment.

.SH OPTIONS
.TP
.B -B <bus> or --disk-bus=<bus>
Use disk bus type <bus>.  (Default is "virtio".)
.TP
.B -C or --clone-image
Clone the VM image file.  By default, the provided image file will be mounted
read/write.
.TP
.B -c <isofile> or --cdrom=<isofile>
Use <isofile> as a virtual CDROM drive.  <isofile> is typically an ISO9660 image.
.TP
.B -d or --debug
Enable debug logging.
.TP
.B -F <fmt> or --disk-format=<fmt>
Treat image files as being of type <fmt>.  (Default is "raw".)
.TP
.B -f <imgfile> or --file=<imgfile> or --image=<imgfile>
Use <imgfile> as the VM image to launch.
.TP
.B -h or --help
Print a usage summary and exit
.TP
.B -L <logfile> or --log=<logfile>
Write log messages to <logfile>.  (Default is STDOUT.)
.TP
.B -l <loc> or --location=<loc>
This parameter is currently unused.
.TP
.B -m <macaddr> or --mac=<macaddr>
Use <macaddr> as the VM instance's MAC address.  If unspecified, a random MAC
address will be generated.
.TP
.B -N or --no-block
Do not block after launching the VM.  By default,
.B job-vm-launch
will block until the VM shuts down.
.TP
.B -n <name> or --name=<name>
Name the launched VM <name> in KVM.  If unspecified, this will be
<jobid>-vm<number>.
.TP
.B -o <ostype> or --os-type=<ostype>
Launch VM as OS type <ostype>.  (Default is "linux".)
.TP
.B -r <memsize> or --ram=<memsize>
Launch VM with a maximum of <memsize> megabytes of memory.  If unspecified,
this will be determined from the job's memory limits.
.TP
.B -t <vmtype> or --vm-type=<vmtype>
Use <vmtype> as the virtual machine type.  (Default is "hvm".)
.B -w <netsettings> or --network=<netsettings>
Launch VM with network settings <netsettings>.  These are described in detail
in qemu(1) under "Network options".
.TP
.B --arch=<arch>
Launch VM as architecture <arch>.  (Default is the architecture of the
host.)
.TP
.B --boot=<bootopts>
Launch VM with boot options <bootopts>.   These are described in
detail in qemu(1) under "Standard options".  (Default is "hd".)
.TP
.B --cpu=<cputype>
Launch VM with CPU type <cputype>.  (Default is "host".)
.TP
.B --disk=<diskspec>
Add <diskspec> to the VM's list of disk devices.  These are described in
detail in qemu(1) under "Standard options".  Can be specified more than
once for multiple devices.
.TP
.B --floppy=<fdspec>
Add <fdspec> to VM as a virtual floppy device.   These are described in
detail in qemu(1) under "Standard options".
.TP
.B --graphics=<grspec>
Launch VM with graphics options <grspec>.  These are described in
detail in qemu(1) under "Display options".  (Default is "vnc".)
.TP
.B --keep-clone
If cloning an image, keep the clone after the VM shuts down.  The default
is to delete cloned images after shutdown.
.TP
.B --keep-guest
Keep the VM instance from
.B libvirtd
after the VM shuts down.  The default is to delete VM instances after shutdown.
.TP
.B --os-variant=<oshint>
This parameter is currently unused.
.TP
.B --validate-xml
Validate the XML message being sent to
.B libvirtd
before sending.  This is not done by default as it requires software that may
not be installed (specifically virt-xml-validate) and sometimes fails on
valid messages.
.TP
.B --vcpus=<N>
Launch the VM with <N> virtual cores.  (Default is the number of cores
requested by the job.)


.SH EXAMPLES

The following job script launches a VM called "ssohub" in the default
hypervisor and then attaches virt-viewer to it:

.NF
#PBS -N ssohub
.BR
#PBS -S /bin/bash
.BR
#PBS -j oe
.BR
#PBS -v DISPLAY
.BR
#PBS -l ncpus=2,mem=4gb,walltime=24:00:00
.P
job-vm-launch --image $SCRATCHDIR/vms/ssohub.img --disk-format qcow2 --mac 52:54:00:cd:65:23 -n ssohub --no-block
.BR
virt-viewer --connect=$hypervisor --wait ssohub
.FI

.SH LIMITATIONS

.B job-vm-launch
requires
.B libvirtd
to be running on any compute node where a VM is to be launched.

By default,
.B job-vm-launch
launches the VM as an unprivileged user using the qemu:///session hypervisor
driver in
.B libvirtd.
This limits the VM's network configuration options to those supported by the
QEMU usermode network stack, the limitations of which are described at
.I https://people.gnome.org/~markmc/qemu-networking.html
Using more sophisticated networking configurations may require running
.B job-vm-launch
setuid-root with the qemu:///system hypervisor driver.

.SH BUGS

.B job-vm-launch
sometimes claims to have failed to launch a VM when communicating with older
versions of
.B libvirtd,
in particular the version that ships with SLES 11 SP1.  In most cases, this
failure is actually a false positive, in that the VM is launched but the
confirmation of the launch fails.

.SH AUTHORS
Troy Baer (troy (at) osc.edu)

.SH SEE ALSO
qemu(1), qsub(1B)
