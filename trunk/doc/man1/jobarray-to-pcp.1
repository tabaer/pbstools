.TH ja 1 "$Date$" "$Revision$" "PBS TOOLS"
.SH NAME
jobarray-to-pcp \- Run the equivalent of a TORQUE job array using parallel-command-processor.

.SH SYNOPSIS
.B jobarray-to-pcp [args] [qsub args] <arrayjobscript>

.SH DESCRIPTION
.B jobarray-to-pcp
acts as a wrapper around the
.B qsub
and
.B parallel-command-processor
(PCP) commands to run the moral equivalent of a TORQUE job array using PCP.
To the extent possible, the resulting parallel job will emulate the job
array's output naming behavior.

.SH OPTIONS

All options for the PBS
.B qsub
command are supported.  In addition, the following are supported:

.TP
.B --help
Print out a help message and exit.
.TP
.B --tpn N or --tasks-per-node=N
Run N instances of 
.B parallel-command-processor
per node.  The default is 1 instance per core.
.TP
.B --test
Print job script to stdout rather than submit it.

.SH EXAMPLES

Consider the following array job script:

.nf
#PBS -N array-job
#PBS -S /bin/bash
#PBS -l walltime=0:05:00
#PBS -j oe
echo $PBS_ARRAYID
sleep 1
.fi

Normally one would submit this with something like
.B qsub -t 1-100 array-job.pbs
, which would result in 100 (single-core) job array elements running
independently.  The equivalent to this on a single 12-core compute node
using PCP would be
.B jobarray-to-pcp -t 1-100 -l nodes=1:ppn=12 array-job.pbs

.SH AUTHOR
Troy Baer (troy (at) osc.edu)

.SH SEE ALSO
.BR qsub (1B), parallel-command-processor (1)
